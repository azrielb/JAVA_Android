/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-12-19 23:55:21 UTC)
 * on 2014-01-13 at 17:20:21 UTC 
 * Modify at your own risk.
 */

package com.appspot.android_technician.serverApi;

/**
 * Service definition for ServerApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ServerApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ServerApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the serverApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://android-technician.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "serverApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ServerApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ServerApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addBill".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link AddBill#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.android_technician.serverApi.model.Bill}
   * @return the request
   */
  public AddBill addBill(com.appspot.android_technician.serverApi.model.Bill content) throws java.io.IOException {
    AddBill result = new AddBill(content);
    initialize(result);
    return result;
  }

  public class AddBill extends ServerApiRequest<Void> {

    private static final String REST_PATH = "serverApi.addBill";

    /**
     * Create a request for the method "addBill".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link AddBill#execute()} method to invoke the remote operation.
     * <p> {@link
     * AddBill#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.android_technician.serverApi.model.Bill}
     * @since 1.13
     */
    protected AddBill(com.appspot.android_technician.serverApi.model.Bill content) {
      super(ServerApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public AddBill setAlt(java.lang.String alt) {
      return (AddBill) super.setAlt(alt);
    }

    @Override
    public AddBill setFields(java.lang.String fields) {
      return (AddBill) super.setFields(fields);
    }

    @Override
    public AddBill setKey(java.lang.String key) {
      return (AddBill) super.setKey(key);
    }

    @Override
    public AddBill setOauthToken(java.lang.String oauthToken) {
      return (AddBill) super.setOauthToken(oauthToken);
    }

    @Override
    public AddBill setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddBill) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddBill setQuotaUser(java.lang.String quotaUser) {
      return (AddBill) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddBill setUserIp(java.lang.String userIp) {
      return (AddBill) super.setUserIp(userIp);
    }

    @Override
    public AddBill set(String parameterName, Object value) {
      return (AddBill) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addComponent".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link AddComponent#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.android_technician.serverApi.model.Component}
   * @return the request
   */
  public AddComponent addComponent(com.appspot.android_technician.serverApi.model.Component content) throws java.io.IOException {
    AddComponent result = new AddComponent(content);
    initialize(result);
    return result;
  }

  public class AddComponent extends ServerApiRequest<Void> {

    private static final String REST_PATH = "serverApi.addComponent";

    /**
     * Create a request for the method "addComponent".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link AddComponent#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddComponent#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.android_technician.serverApi.model.Component}
     * @since 1.13
     */
    protected AddComponent(com.appspot.android_technician.serverApi.model.Component content) {
      super(ServerApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public AddComponent setAlt(java.lang.String alt) {
      return (AddComponent) super.setAlt(alt);
    }

    @Override
    public AddComponent setFields(java.lang.String fields) {
      return (AddComponent) super.setFields(fields);
    }

    @Override
    public AddComponent setKey(java.lang.String key) {
      return (AddComponent) super.setKey(key);
    }

    @Override
    public AddComponent setOauthToken(java.lang.String oauthToken) {
      return (AddComponent) super.setOauthToken(oauthToken);
    }

    @Override
    public AddComponent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddComponent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddComponent setQuotaUser(java.lang.String quotaUser) {
      return (AddComponent) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddComponent setUserIp(java.lang.String userIp) {
      return (AddComponent) super.setUserIp(userIp);
    }

    @Override
    public AddComponent set(String parameterName, Object value) {
      return (AddComponent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addOrder".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link AddOrder#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.android_technician.serverApi.model.Order}
   * @return the request
   */
  public AddOrder addOrder(com.appspot.android_technician.serverApi.model.Order content) throws java.io.IOException {
    AddOrder result = new AddOrder(content);
    initialize(result);
    return result;
  }

  public class AddOrder extends ServerApiRequest<Void> {

    private static final String REST_PATH = "serverApi.addOrder";

    /**
     * Create a request for the method "addOrder".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link AddOrder#execute()} method to invoke the remote operation.
     * <p> {@link
     * AddOrder#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.android_technician.serverApi.model.Order}
     * @since 1.13
     */
    protected AddOrder(com.appspot.android_technician.serverApi.model.Order content) {
      super(ServerApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public AddOrder setAlt(java.lang.String alt) {
      return (AddOrder) super.setAlt(alt);
    }

    @Override
    public AddOrder setFields(java.lang.String fields) {
      return (AddOrder) super.setFields(fields);
    }

    @Override
    public AddOrder setKey(java.lang.String key) {
      return (AddOrder) super.setKey(key);
    }

    @Override
    public AddOrder setOauthToken(java.lang.String oauthToken) {
      return (AddOrder) super.setOauthToken(oauthToken);
    }

    @Override
    public AddOrder setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddOrder) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddOrder setQuotaUser(java.lang.String quotaUser) {
      return (AddOrder) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddOrder setUserIp(java.lang.String userIp) {
      return (AddOrder) super.setUserIp(userIp);
    }

    @Override
    public AddOrder set(String parameterName, Object value) {
      return (AddOrder) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addTechnician".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link AddTechnician#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.android_technician.serverApi.model.Technician}
   * @return the request
   */
  public AddTechnician addTechnician(com.appspot.android_technician.serverApi.model.Technician content) throws java.io.IOException {
    AddTechnician result = new AddTechnician(content);
    initialize(result);
    return result;
  }

  public class AddTechnician extends ServerApiRequest<Void> {

    private static final String REST_PATH = "serverApi.addTechnician";

    /**
     * Create a request for the method "addTechnician".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link AddTechnician#execute()} method to invoke the remote
     * operation. <p> {@link AddTechnician#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.appspot.android_technician.serverApi.model.Technician}
     * @since 1.13
     */
    protected AddTechnician(com.appspot.android_technician.serverApi.model.Technician content) {
      super(ServerApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public AddTechnician setAlt(java.lang.String alt) {
      return (AddTechnician) super.setAlt(alt);
    }

    @Override
    public AddTechnician setFields(java.lang.String fields) {
      return (AddTechnician) super.setFields(fields);
    }

    @Override
    public AddTechnician setKey(java.lang.String key) {
      return (AddTechnician) super.setKey(key);
    }

    @Override
    public AddTechnician setOauthToken(java.lang.String oauthToken) {
      return (AddTechnician) super.setOauthToken(oauthToken);
    }

    @Override
    public AddTechnician setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddTechnician) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddTechnician setQuotaUser(java.lang.String quotaUser) {
      return (AddTechnician) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddTechnician setUserIp(java.lang.String userIp) {
      return (AddTechnician) super.setUserIp(userIp);
    }

    @Override
    public AddTechnician set(String parameterName, Object value) {
      return (AddTechnician) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteTechnician".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link DeleteTechnician#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.android_technician.serverApi.model.Technician}
   * @return the request
   */
  public DeleteTechnician deleteTechnician(com.appspot.android_technician.serverApi.model.Technician content) throws java.io.IOException {
    DeleteTechnician result = new DeleteTechnician(content);
    initialize(result);
    return result;
  }

  public class DeleteTechnician extends ServerApiRequest<Void> {

    private static final String REST_PATH = "serverApi.deleteTechnician";

    /**
     * Create a request for the method "deleteTechnician".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link DeleteTechnician#execute()} method to invoke the remote
     * operation. <p> {@link DeleteTechnician#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.android_technician.serverApi.model.Technician}
     * @since 1.13
     */
    protected DeleteTechnician(com.appspot.android_technician.serverApi.model.Technician content) {
      super(ServerApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public DeleteTechnician setAlt(java.lang.String alt) {
      return (DeleteTechnician) super.setAlt(alt);
    }

    @Override
    public DeleteTechnician setFields(java.lang.String fields) {
      return (DeleteTechnician) super.setFields(fields);
    }

    @Override
    public DeleteTechnician setKey(java.lang.String key) {
      return (DeleteTechnician) super.setKey(key);
    }

    @Override
    public DeleteTechnician setOauthToken(java.lang.String oauthToken) {
      return (DeleteTechnician) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteTechnician setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteTechnician) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteTechnician setQuotaUser(java.lang.String quotaUser) {
      return (DeleteTechnician) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteTechnician setUserIp(java.lang.String userIp) {
      return (DeleteTechnician) super.setUserIp(userIp);
    }

    @Override
    public DeleteTechnician set(String parameterName, Object value) {
      return (DeleteTechnician) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAllBills".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetAllBills#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetAllBills getAllBills() throws java.io.IOException {
    GetAllBills result = new GetAllBills();
    initialize(result);
    return result;
  }

  public class GetAllBills extends ServerApiRequest<com.appspot.android_technician.serverApi.model.BillCollection> {

    private static final String REST_PATH = "serverApi.getAllBills";

    /**
     * Create a request for the method "getAllBills".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetAllBills#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetAllBills#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetAllBills() {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.BillCollection.class);
    }

    @Override
    public GetAllBills setAlt(java.lang.String alt) {
      return (GetAllBills) super.setAlt(alt);
    }

    @Override
    public GetAllBills setFields(java.lang.String fields) {
      return (GetAllBills) super.setFields(fields);
    }

    @Override
    public GetAllBills setKey(java.lang.String key) {
      return (GetAllBills) super.setKey(key);
    }

    @Override
    public GetAllBills setOauthToken(java.lang.String oauthToken) {
      return (GetAllBills) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAllBills setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAllBills) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAllBills setQuotaUser(java.lang.String quotaUser) {
      return (GetAllBills) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAllBills setUserIp(java.lang.String userIp) {
      return (GetAllBills) super.setUserIp(userIp);
    }

    @Override
    public GetAllBills set(String parameterName, Object value) {
      return (GetAllBills) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAllComponents".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetAllComponents#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetAllComponents getAllComponents() throws java.io.IOException {
    GetAllComponents result = new GetAllComponents();
    initialize(result);
    return result;
  }

  public class GetAllComponents extends ServerApiRequest<com.appspot.android_technician.serverApi.model.ComponentCollection> {

    private static final String REST_PATH = "serverApi.getAllComponents";

    /**
     * Create a request for the method "getAllComponents".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetAllComponents#execute()} method to invoke the remote
     * operation. <p> {@link GetAllComponents#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetAllComponents() {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.ComponentCollection.class);
    }

    @Override
    public GetAllComponents setAlt(java.lang.String alt) {
      return (GetAllComponents) super.setAlt(alt);
    }

    @Override
    public GetAllComponents setFields(java.lang.String fields) {
      return (GetAllComponents) super.setFields(fields);
    }

    @Override
    public GetAllComponents setKey(java.lang.String key) {
      return (GetAllComponents) super.setKey(key);
    }

    @Override
    public GetAllComponents setOauthToken(java.lang.String oauthToken) {
      return (GetAllComponents) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAllComponents setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAllComponents) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAllComponents setQuotaUser(java.lang.String quotaUser) {
      return (GetAllComponents) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAllComponents setUserIp(java.lang.String userIp) {
      return (GetAllComponents) super.setUserIp(userIp);
    }

    @Override
    public GetAllComponents set(String parameterName, Object value) {
      return (GetAllComponents) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAllOrders".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetAllOrders#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetAllOrders getAllOrders() throws java.io.IOException {
    GetAllOrders result = new GetAllOrders();
    initialize(result);
    return result;
  }

  public class GetAllOrders extends ServerApiRequest<com.appspot.android_technician.serverApi.model.OrderCollection> {

    private static final String REST_PATH = "serverApi.getAllOrders";

    /**
     * Create a request for the method "getAllOrders".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetAllOrders#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetAllOrders#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetAllOrders() {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.OrderCollection.class);
    }

    @Override
    public GetAllOrders setAlt(java.lang.String alt) {
      return (GetAllOrders) super.setAlt(alt);
    }

    @Override
    public GetAllOrders setFields(java.lang.String fields) {
      return (GetAllOrders) super.setFields(fields);
    }

    @Override
    public GetAllOrders setKey(java.lang.String key) {
      return (GetAllOrders) super.setKey(key);
    }

    @Override
    public GetAllOrders setOauthToken(java.lang.String oauthToken) {
      return (GetAllOrders) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAllOrders setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAllOrders) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAllOrders setQuotaUser(java.lang.String quotaUser) {
      return (GetAllOrders) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAllOrders setUserIp(java.lang.String userIp) {
      return (GetAllOrders) super.setUserIp(userIp);
    }

    @Override
    public GetAllOrders set(String parameterName, Object value) {
      return (GetAllOrders) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAllTechnicians".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetAllTechnicians#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetAllTechnicians getAllTechnicians() throws java.io.IOException {
    GetAllTechnicians result = new GetAllTechnicians();
    initialize(result);
    return result;
  }

  public class GetAllTechnicians extends ServerApiRequest<com.appspot.android_technician.serverApi.model.TechnicianCollection> {

    private static final String REST_PATH = "serverApi.getAllTechnicians";

    /**
     * Create a request for the method "getAllTechnicians".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetAllTechnicians#execute()} method to invoke the remote
     * operation. <p> {@link GetAllTechnicians#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetAllTechnicians() {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.TechnicianCollection.class);
    }

    @Override
    public GetAllTechnicians setAlt(java.lang.String alt) {
      return (GetAllTechnicians) super.setAlt(alt);
    }

    @Override
    public GetAllTechnicians setFields(java.lang.String fields) {
      return (GetAllTechnicians) super.setFields(fields);
    }

    @Override
    public GetAllTechnicians setKey(java.lang.String key) {
      return (GetAllTechnicians) super.setKey(key);
    }

    @Override
    public GetAllTechnicians setOauthToken(java.lang.String oauthToken) {
      return (GetAllTechnicians) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAllTechnicians setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAllTechnicians) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAllTechnicians setQuotaUser(java.lang.String quotaUser) {
      return (GetAllTechnicians) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAllTechnicians setUserIp(java.lang.String userIp) {
      return (GetAllTechnicians) super.setUserIp(userIp);
    }

    @Override
    public GetAllTechnicians set(String parameterName, Object value) {
      return (GetAllTechnicians) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAvailableComponents".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetAvailableComponents#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetAvailableComponents getAvailableComponents() throws java.io.IOException {
    GetAvailableComponents result = new GetAvailableComponents();
    initialize(result);
    return result;
  }

  public class GetAvailableComponents extends ServerApiRequest<com.appspot.android_technician.serverApi.model.ComponentCollection> {

    private static final String REST_PATH = "serverApi.getAvailableComponents";

    /**
     * Create a request for the method "getAvailableComponents".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetAvailableComponents#execute()} method to invoke the
     * remote operation. <p> {@link GetAvailableComponents#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetAvailableComponents() {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.ComponentCollection.class);
    }

    @Override
    public GetAvailableComponents setAlt(java.lang.String alt) {
      return (GetAvailableComponents) super.setAlt(alt);
    }

    @Override
    public GetAvailableComponents setFields(java.lang.String fields) {
      return (GetAvailableComponents) super.setFields(fields);
    }

    @Override
    public GetAvailableComponents setKey(java.lang.String key) {
      return (GetAvailableComponents) super.setKey(key);
    }

    @Override
    public GetAvailableComponents setOauthToken(java.lang.String oauthToken) {
      return (GetAvailableComponents) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAvailableComponents setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAvailableComponents) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAvailableComponents setQuotaUser(java.lang.String quotaUser) {
      return (GetAvailableComponents) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAvailableComponents setUserIp(java.lang.String userIp) {
      return (GetAvailableComponents) super.setUserIp(userIp);
    }

    @Override
    public GetAvailableComponents set(String parameterName, Object value) {
      return (GetAvailableComponents) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getComponentsByOrderNumber".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetComponentsByOrderNumber#execute()} method to invoke the remote
   * operation.
   *
   * @param orderNumber
   * @return the request
   */
  public GetComponentsByOrderNumber getComponentsByOrderNumber(java.lang.Long orderNumber) throws java.io.IOException {
    GetComponentsByOrderNumber result = new GetComponentsByOrderNumber(orderNumber);
    initialize(result);
    return result;
  }

  public class GetComponentsByOrderNumber extends ServerApiRequest<com.appspot.android_technician.serverApi.model.ComponentCollection> {

    private static final String REST_PATH = "serverApi.getComponentsByOrderNumber";

    /**
     * Create a request for the method "getComponentsByOrderNumber".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetComponentsByOrderNumber#execute()} method to invoke the
     * remote operation. <p> {@link GetComponentsByOrderNumber#initialize(com.google.api.client.google
     * apis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param orderNumber
     * @since 1.13
     */
    protected GetComponentsByOrderNumber(java.lang.Long orderNumber) {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.ComponentCollection.class);
      this.orderNumber = com.google.api.client.util.Preconditions.checkNotNull(orderNumber, "Required parameter orderNumber must be specified.");
    }

    @Override
    public GetComponentsByOrderNumber setAlt(java.lang.String alt) {
      return (GetComponentsByOrderNumber) super.setAlt(alt);
    }

    @Override
    public GetComponentsByOrderNumber setFields(java.lang.String fields) {
      return (GetComponentsByOrderNumber) super.setFields(fields);
    }

    @Override
    public GetComponentsByOrderNumber setKey(java.lang.String key) {
      return (GetComponentsByOrderNumber) super.setKey(key);
    }

    @Override
    public GetComponentsByOrderNumber setOauthToken(java.lang.String oauthToken) {
      return (GetComponentsByOrderNumber) super.setOauthToken(oauthToken);
    }

    @Override
    public GetComponentsByOrderNumber setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetComponentsByOrderNumber) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetComponentsByOrderNumber setQuotaUser(java.lang.String quotaUser) {
      return (GetComponentsByOrderNumber) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetComponentsByOrderNumber setUserIp(java.lang.String userIp) {
      return (GetComponentsByOrderNumber) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long orderNumber;

    /**

     */
    public java.lang.Long getOrderNumber() {
      return orderNumber;
    }

    public GetComponentsByOrderNumber setOrderNumber(java.lang.Long orderNumber) {
      this.orderNumber = orderNumber;
      return this;
    }

    @Override
    public GetComponentsByOrderNumber set(String parameterName, Object value) {
      return (GetComponentsByOrderNumber) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getFilteredOrders".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetFilteredOrders#execute()} method to invoke the remote operation.
   *
   * @param filter
   * @param id
   * @return the request
   */
  public GetFilteredOrders getFilteredOrders(java.lang.String filter, java.lang.Long id) throws java.io.IOException {
    GetFilteredOrders result = new GetFilteredOrders(filter, id);
    initialize(result);
    return result;
  }

  public class GetFilteredOrders extends ServerApiRequest<com.appspot.android_technician.serverApi.model.OrderCollection> {

    private static final String REST_PATH = "serverApi.getFilteredOrders";

    /**
     * Create a request for the method "getFilteredOrders".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetFilteredOrders#execute()} method to invoke the remote
     * operation. <p> {@link GetFilteredOrders#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param filter
     * @param id
     * @since 1.13
     */
    protected GetFilteredOrders(java.lang.String filter, java.lang.Long id) {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.OrderCollection.class);
      this.filter = com.google.api.client.util.Preconditions.checkNotNull(filter, "Required parameter filter must be specified.");
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public GetFilteredOrders setAlt(java.lang.String alt) {
      return (GetFilteredOrders) super.setAlt(alt);
    }

    @Override
    public GetFilteredOrders setFields(java.lang.String fields) {
      return (GetFilteredOrders) super.setFields(fields);
    }

    @Override
    public GetFilteredOrders setKey(java.lang.String key) {
      return (GetFilteredOrders) super.setKey(key);
    }

    @Override
    public GetFilteredOrders setOauthToken(java.lang.String oauthToken) {
      return (GetFilteredOrders) super.setOauthToken(oauthToken);
    }

    @Override
    public GetFilteredOrders setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetFilteredOrders) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetFilteredOrders setQuotaUser(java.lang.String quotaUser) {
      return (GetFilteredOrders) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetFilteredOrders setUserIp(java.lang.String userIp) {
      return (GetFilteredOrders) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String filter;

    /**

     */
    public java.lang.String getFilter() {
      return filter;
    }

    public GetFilteredOrders setFilter(java.lang.String filter) {
      this.filter = filter;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetFilteredOrders setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetFilteredOrders set(String parameterName, Object value) {
      return (GetFilteredOrders) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getOrderByNumber".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetOrderByNumber#execute()} method to invoke the remote operation.
   *
   * @param orderNumber
   * @return the request
   */
  public GetOrderByNumber getOrderByNumber(java.lang.Long orderNumber) throws java.io.IOException {
    GetOrderByNumber result = new GetOrderByNumber(orderNumber);
    initialize(result);
    return result;
  }

  public class GetOrderByNumber extends ServerApiRequest<com.appspot.android_technician.serverApi.model.Order> {

    private static final String REST_PATH = "serverApi.getOrderByNumber";

    /**
     * Create a request for the method "getOrderByNumber".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetOrderByNumber#execute()} method to invoke the remote
     * operation. <p> {@link GetOrderByNumber#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param orderNumber
     * @since 1.13
     */
    protected GetOrderByNumber(java.lang.Long orderNumber) {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.Order.class);
      this.orderNumber = com.google.api.client.util.Preconditions.checkNotNull(orderNumber, "Required parameter orderNumber must be specified.");
    }

    @Override
    public GetOrderByNumber setAlt(java.lang.String alt) {
      return (GetOrderByNumber) super.setAlt(alt);
    }

    @Override
    public GetOrderByNumber setFields(java.lang.String fields) {
      return (GetOrderByNumber) super.setFields(fields);
    }

    @Override
    public GetOrderByNumber setKey(java.lang.String key) {
      return (GetOrderByNumber) super.setKey(key);
    }

    @Override
    public GetOrderByNumber setOauthToken(java.lang.String oauthToken) {
      return (GetOrderByNumber) super.setOauthToken(oauthToken);
    }

    @Override
    public GetOrderByNumber setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetOrderByNumber) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetOrderByNumber setQuotaUser(java.lang.String quotaUser) {
      return (GetOrderByNumber) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetOrderByNumber setUserIp(java.lang.String userIp) {
      return (GetOrderByNumber) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long orderNumber;

    /**

     */
    public java.lang.Long getOrderNumber() {
      return orderNumber;
    }

    public GetOrderByNumber setOrderNumber(java.lang.Long orderNumber) {
      this.orderNumber = orderNumber;
      return this;
    }

    @Override
    public GetOrderByNumber set(String parameterName, Object value) {
      return (GetOrderByNumber) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getOrdersByTechnicianId".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetOrdersByTechnicianId#execute()} method to invoke the remote
   * operation.
   *
   * @param technicianID
   * @return the request
   */
  public GetOrdersByTechnicianId getOrdersByTechnicianId(java.lang.Long technicianID) throws java.io.IOException {
    GetOrdersByTechnicianId result = new GetOrdersByTechnicianId(technicianID);
    initialize(result);
    return result;
  }

  public class GetOrdersByTechnicianId extends ServerApiRequest<com.appspot.android_technician.serverApi.model.OrderCollection> {

    private static final String REST_PATH = "serverApi.getOrdersByTechnicianId";

    /**
     * Create a request for the method "getOrdersByTechnicianId".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetOrdersByTechnicianId#execute()} method to invoke the
     * remote operation. <p> {@link GetOrdersByTechnicianId#initialize(com.google.api.client.googleapi
     * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param technicianID
     * @since 1.13
     */
    protected GetOrdersByTechnicianId(java.lang.Long technicianID) {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.OrderCollection.class);
      this.technicianID = com.google.api.client.util.Preconditions.checkNotNull(technicianID, "Required parameter technicianID must be specified.");
    }

    @Override
    public GetOrdersByTechnicianId setAlt(java.lang.String alt) {
      return (GetOrdersByTechnicianId) super.setAlt(alt);
    }

    @Override
    public GetOrdersByTechnicianId setFields(java.lang.String fields) {
      return (GetOrdersByTechnicianId) super.setFields(fields);
    }

    @Override
    public GetOrdersByTechnicianId setKey(java.lang.String key) {
      return (GetOrdersByTechnicianId) super.setKey(key);
    }

    @Override
    public GetOrdersByTechnicianId setOauthToken(java.lang.String oauthToken) {
      return (GetOrdersByTechnicianId) super.setOauthToken(oauthToken);
    }

    @Override
    public GetOrdersByTechnicianId setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetOrdersByTechnicianId) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetOrdersByTechnicianId setQuotaUser(java.lang.String quotaUser) {
      return (GetOrdersByTechnicianId) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetOrdersByTechnicianId setUserIp(java.lang.String userIp) {
      return (GetOrdersByTechnicianId) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long technicianID;

    /**

     */
    public java.lang.Long getTechnicianID() {
      return technicianID;
    }

    public GetOrdersByTechnicianId setTechnicianID(java.lang.Long technicianID) {
      this.technicianID = technicianID;
      return this;
    }

    @Override
    public GetOrdersByTechnicianId set(String parameterName, Object value) {
      return (GetOrdersByTechnicianId) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTechnicianByName".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetTechnicianByName#execute()} method to invoke the remote operation.
   *
   * @param technicianName
   * @return the request
   */
  public GetTechnicianByName getTechnicianByName(java.lang.String technicianName) throws java.io.IOException {
    GetTechnicianByName result = new GetTechnicianByName(technicianName);
    initialize(result);
    return result;
  }

  public class GetTechnicianByName extends ServerApiRequest<com.appspot.android_technician.serverApi.model.Technician> {

    private static final String REST_PATH = "serverApi.getTechnicianByName";

    /**
     * Create a request for the method "getTechnicianByName".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetTechnicianByName#execute()} method to invoke the remote
     * operation. <p> {@link GetTechnicianByName#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param technicianName
     * @since 1.13
     */
    protected GetTechnicianByName(java.lang.String technicianName) {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.Technician.class);
      this.technicianName = com.google.api.client.util.Preconditions.checkNotNull(technicianName, "Required parameter technicianName must be specified.");
    }

    @Override
    public GetTechnicianByName setAlt(java.lang.String alt) {
      return (GetTechnicianByName) super.setAlt(alt);
    }

    @Override
    public GetTechnicianByName setFields(java.lang.String fields) {
      return (GetTechnicianByName) super.setFields(fields);
    }

    @Override
    public GetTechnicianByName setKey(java.lang.String key) {
      return (GetTechnicianByName) super.setKey(key);
    }

    @Override
    public GetTechnicianByName setOauthToken(java.lang.String oauthToken) {
      return (GetTechnicianByName) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTechnicianByName setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTechnicianByName) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTechnicianByName setQuotaUser(java.lang.String quotaUser) {
      return (GetTechnicianByName) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTechnicianByName setUserIp(java.lang.String userIp) {
      return (GetTechnicianByName) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String technicianName;

    /**

     */
    public java.lang.String getTechnicianName() {
      return technicianName;
    }

    public GetTechnicianByName setTechnicianName(java.lang.String technicianName) {
      this.technicianName = technicianName;
      return this;
    }

    @Override
    public GetTechnicianByName set(String parameterName, Object value) {
      return (GetTechnicianByName) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUserById".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetUserById#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetUserById getUserById(java.lang.Long id) throws java.io.IOException {
    GetUserById result = new GetUserById(id);
    initialize(result);
    return result;
  }

  public class GetUserById extends ServerApiRequest<com.appspot.android_technician.serverApi.model.Technician> {

    private static final String REST_PATH = "serverApi.getUserById";

    /**
     * Create a request for the method "getUserById".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetUserById#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetUserById#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetUserById(java.lang.Long id) {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.Technician.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public GetUserById setAlt(java.lang.String alt) {
      return (GetUserById) super.setAlt(alt);
    }

    @Override
    public GetUserById setFields(java.lang.String fields) {
      return (GetUserById) super.setFields(fields);
    }

    @Override
    public GetUserById setKey(java.lang.String key) {
      return (GetUserById) super.setKey(key);
    }

    @Override
    public GetUserById setOauthToken(java.lang.String oauthToken) {
      return (GetUserById) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserById setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserById) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserById setQuotaUser(java.lang.String quotaUser) {
      return (GetUserById) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserById setUserIp(java.lang.String userIp) {
      return (GetUserById) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetUserById setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetUserById set(String parameterName, Object value) {
      return (GetUserById) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUserByIdAndPassword".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link GetUserByIdAndPassword#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @param password
   * @return the request
   */
  public GetUserByIdAndPassword getUserByIdAndPassword(java.lang.Long id, java.lang.String password) throws java.io.IOException {
    GetUserByIdAndPassword result = new GetUserByIdAndPassword(id, password);
    initialize(result);
    return result;
  }

  public class GetUserByIdAndPassword extends ServerApiRequest<com.appspot.android_technician.serverApi.model.Technician> {

    private static final String REST_PATH = "serverApi.getUserByIdAndPassword";

    /**
     * Create a request for the method "getUserByIdAndPassword".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link GetUserByIdAndPassword#execute()} method to invoke the
     * remote operation. <p> {@link GetUserByIdAndPassword#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param id
     * @param password
     * @since 1.13
     */
    protected GetUserByIdAndPassword(java.lang.Long id, java.lang.String password) {
      super(ServerApi.this, "POST", REST_PATH, null, com.appspot.android_technician.serverApi.model.Technician.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public GetUserByIdAndPassword setAlt(java.lang.String alt) {
      return (GetUserByIdAndPassword) super.setAlt(alt);
    }

    @Override
    public GetUserByIdAndPassword setFields(java.lang.String fields) {
      return (GetUserByIdAndPassword) super.setFields(fields);
    }

    @Override
    public GetUserByIdAndPassword setKey(java.lang.String key) {
      return (GetUserByIdAndPassword) super.setKey(key);
    }

    @Override
    public GetUserByIdAndPassword setOauthToken(java.lang.String oauthToken) {
      return (GetUserByIdAndPassword) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUserByIdAndPassword setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUserByIdAndPassword) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUserByIdAndPassword setQuotaUser(java.lang.String quotaUser) {
      return (GetUserByIdAndPassword) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUserByIdAndPassword setUserIp(java.lang.String userIp) {
      return (GetUserByIdAndPassword) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetUserByIdAndPassword setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public GetUserByIdAndPassword setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public GetUserByIdAndPassword set(String parameterName, Object value) {
      return (GetUserByIdAndPassword) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateBill".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link UpdateBill#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.android_technician.serverApi.model.Bill}
   * @return the request
   */
  public UpdateBill updateBill(com.appspot.android_technician.serverApi.model.Bill content) throws java.io.IOException {
    UpdateBill result = new UpdateBill(content);
    initialize(result);
    return result;
  }

  public class UpdateBill extends ServerApiRequest<Void> {

    private static final String REST_PATH = "serverApi.updateBill";

    /**
     * Create a request for the method "updateBill".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link UpdateBill#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateBill#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.android_technician.serverApi.model.Bill}
     * @since 1.13
     */
    protected UpdateBill(com.appspot.android_technician.serverApi.model.Bill content) {
      super(ServerApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public UpdateBill setAlt(java.lang.String alt) {
      return (UpdateBill) super.setAlt(alt);
    }

    @Override
    public UpdateBill setFields(java.lang.String fields) {
      return (UpdateBill) super.setFields(fields);
    }

    @Override
    public UpdateBill setKey(java.lang.String key) {
      return (UpdateBill) super.setKey(key);
    }

    @Override
    public UpdateBill setOauthToken(java.lang.String oauthToken) {
      return (UpdateBill) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateBill setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateBill) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateBill setQuotaUser(java.lang.String quotaUser) {
      return (UpdateBill) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateBill setUserIp(java.lang.String userIp) {
      return (UpdateBill) super.setUserIp(userIp);
    }

    @Override
    public UpdateBill set(String parameterName, Object value) {
      return (UpdateBill) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateComponent".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link UpdateComponent#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.android_technician.serverApi.model.Component}
   * @return the request
   */
  public UpdateComponent updateComponent(com.appspot.android_technician.serverApi.model.Component content) throws java.io.IOException {
    UpdateComponent result = new UpdateComponent(content);
    initialize(result);
    return result;
  }

  public class UpdateComponent extends ServerApiRequest<Void> {

    private static final String REST_PATH = "serverApi.updateComponent";

    /**
     * Create a request for the method "updateComponent".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link UpdateComponent#execute()} method to invoke the remote
     * operation. <p> {@link UpdateComponent#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.appspot.android_technician.serverApi.model.Component}
     * @since 1.13
     */
    protected UpdateComponent(com.appspot.android_technician.serverApi.model.Component content) {
      super(ServerApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public UpdateComponent setAlt(java.lang.String alt) {
      return (UpdateComponent) super.setAlt(alt);
    }

    @Override
    public UpdateComponent setFields(java.lang.String fields) {
      return (UpdateComponent) super.setFields(fields);
    }

    @Override
    public UpdateComponent setKey(java.lang.String key) {
      return (UpdateComponent) super.setKey(key);
    }

    @Override
    public UpdateComponent setOauthToken(java.lang.String oauthToken) {
      return (UpdateComponent) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateComponent setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateComponent) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateComponent setQuotaUser(java.lang.String quotaUser) {
      return (UpdateComponent) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateComponent setUserIp(java.lang.String userIp) {
      return (UpdateComponent) super.setUserIp(userIp);
    }

    @Override
    public UpdateComponent set(String parameterName, Object value) {
      return (UpdateComponent) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateOrder".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link UpdateOrder#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.android_technician.serverApi.model.Order}
   * @return the request
   */
  public UpdateOrder updateOrder(com.appspot.android_technician.serverApi.model.Order content) throws java.io.IOException {
    UpdateOrder result = new UpdateOrder(content);
    initialize(result);
    return result;
  }

  public class UpdateOrder extends ServerApiRequest<Void> {

    private static final String REST_PATH = "serverApi.updateOrder";

    /**
     * Create a request for the method "updateOrder".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link UpdateOrder#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateOrder#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.android_technician.serverApi.model.Order}
     * @since 1.13
     */
    protected UpdateOrder(com.appspot.android_technician.serverApi.model.Order content) {
      super(ServerApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public UpdateOrder setAlt(java.lang.String alt) {
      return (UpdateOrder) super.setAlt(alt);
    }

    @Override
    public UpdateOrder setFields(java.lang.String fields) {
      return (UpdateOrder) super.setFields(fields);
    }

    @Override
    public UpdateOrder setKey(java.lang.String key) {
      return (UpdateOrder) super.setKey(key);
    }

    @Override
    public UpdateOrder setOauthToken(java.lang.String oauthToken) {
      return (UpdateOrder) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateOrder setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateOrder) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateOrder setQuotaUser(java.lang.String quotaUser) {
      return (UpdateOrder) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateOrder setUserIp(java.lang.String userIp) {
      return (UpdateOrder) super.setUserIp(userIp);
    }

    @Override
    public UpdateOrder set(String parameterName, Object value) {
      return (UpdateOrder) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateTechnician".
   *
   * This request holds the parameters needed by the the serverApi server.  After setting any optional
   * parameters, call the {@link UpdateTechnician#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.android_technician.serverApi.model.Technician}
   * @return the request
   */
  public UpdateTechnician updateTechnician(com.appspot.android_technician.serverApi.model.Technician content) throws java.io.IOException {
    UpdateTechnician result = new UpdateTechnician(content);
    initialize(result);
    return result;
  }

  public class UpdateTechnician extends ServerApiRequest<Void> {

    private static final String REST_PATH = "serverApi.updateTechnician";

    /**
     * Create a request for the method "updateTechnician".
     *
     * This request holds the parameters needed by the the serverApi server.  After setting any
     * optional parameters, call the {@link UpdateTechnician#execute()} method to invoke the remote
     * operation. <p> {@link UpdateTechnician#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.android_technician.serverApi.model.Technician}
     * @since 1.13
     */
    protected UpdateTechnician(com.appspot.android_technician.serverApi.model.Technician content) {
      super(ServerApi.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public UpdateTechnician setAlt(java.lang.String alt) {
      return (UpdateTechnician) super.setAlt(alt);
    }

    @Override
    public UpdateTechnician setFields(java.lang.String fields) {
      return (UpdateTechnician) super.setFields(fields);
    }

    @Override
    public UpdateTechnician setKey(java.lang.String key) {
      return (UpdateTechnician) super.setKey(key);
    }

    @Override
    public UpdateTechnician setOauthToken(java.lang.String oauthToken) {
      return (UpdateTechnician) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateTechnician setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateTechnician) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateTechnician setQuotaUser(java.lang.String quotaUser) {
      return (UpdateTechnician) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateTechnician setUserIp(java.lang.String userIp) {
      return (UpdateTechnician) super.setUserIp(userIp);
    }

    @Override
    public UpdateTechnician set(String parameterName, Object value) {
      return (UpdateTechnician) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link ServerApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link ServerApi}. */
    @Override
    public ServerApi build() {
      return new ServerApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ServerApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setServerApiRequestInitializer(
        ServerApiRequestInitializer serverapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(serverapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
